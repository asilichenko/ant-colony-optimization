package ua.in.asilichenko.antcolony.samples;

/**
 * Samples of the travelling salesman problem of different sizes.
 * <p>
 * Were taken from:
 * <ul>
 * <li><a href="https://stackoverflow.com/questions/11007355/data-for-simple-tsp">stackoverflow</a></li>
 * <li><a href="https://people.sc.fsu.edu/~jburkardt/datasets/tsp/tsp.html">people.sc.fsu.edu/~jburkardt/tsp</a></li>
 * <li><a href="http://comopt.ifi.uni-heidelberg.de/software/TSPLIB95/tsp/">comopt.ifi.uni-heidelberg.de</a></li>
 * </ul>
 *
 * @author Oleksii Sylichenko (a.silichenko@gmail.com)
 * Creation date: 16.12.2022
 */
public record Sample(int[] shortestPath, long expected, long[][] costMtx) {

    public static final Sample SAMPLE_5 = new Sample(new int[]{0, 2, 1, 4, 3, 0},
            19,
            new long[][]{
                    {0, 3, 4, 2, 7},
                    {3, 0, 4, 6, 3},
                    {4, 4, 0, 5, 8},
                    {2, 6, 5, 0, 6},
                    {7, 3, 8, 6, 0},
            });

    public static final Sample SAMPLE_6 = new Sample(new int[]{0, 1, 2, 3, 4, 5, 0},
            1248,
            new long[][]{
                    {9999, 64, 378, 519, 434, 200},
                    {64, 9999, 318, 455, 375, 164},
                    {378, 318, 9999, 170, 265, 344},
                    {519, 455, 170, 9999, 223, 428},
                    {434, 375, 265, 223, 9999, 273},
                    {200, 164, 344, 428, 273, 9999},
            });

    public static final Sample SAMPLE_17 = new Sample(new int[]{0, 3, 12, 6, 7, 5, 16, 13, 14, 2, 10, 9, 1, 4, 8, 11, 15, 0},
            2085,
            new long[][]{
                    {0, 633, 257, 91, 412, 150, 80, 134, 259, 505, 353, 324, 70, 211, 268, 246, 121},
                    {633, 0, 390, 661, 227, 488, 572, 530, 555, 289, 282, 638, 567, 466, 420, 745, 518},
                    {257, 390, 0, 228, 169, 112, 196, 154, 372, 262, 110, 437, 191, 74, 53, 472, 142},
                    {91, 661, 228, 0, 383, 120, 77, 105, 175, 476, 324, 240, 27, 182, 239, 237, 84},
                    {412, 227, 169, 383, 0, 267, 351, 309, 338, 196, 61, 421, 346, 243, 199, 528, 297},
                    {150, 488, 112, 120, 267, 0, 63, 34, 264, 360, 208, 329, 83, 105, 123, 364, 35},
                    {80, 572, 196, 77, 351, 63, 0, 29, 232, 444, 292, 297, 47, 150, 207, 332, 29},
                    {134, 530, 154, 105, 309, 34, 29, 0, 249, 402, 250, 314, 68, 108, 165, 349, 36},
                    {259, 555, 372, 175, 338, 264, 232, 249, 0, 495, 352, 95, 189, 326, 383, 202, 236},
                    {505, 289, 262, 476, 196, 360, 444, 402, 495, 0, 154, 578, 439, 336, 240, 685, 390},
                    {353, 282, 110, 324, 61, 208, 292, 250, 352, 154, 0, 435, 287, 184, 140, 542, 238},
                    {324, 638, 437, 240, 421, 329, 297, 314, 95, 578, 435, 0, 254, 391, 448, 157, 301},
                    {70, 567, 191, 27, 346, 83, 47, 68, 189, 439, 287, 254, 0, 145, 202, 289, 55},
                    {211, 466, 74, 182, 243, 105, 150, 108, 326, 336, 184, 391, 145, 0, 57, 426, 96},
                    {268, 420, 53, 239, 199, 123, 207, 165, 383, 240, 140, 448, 202, 57, 0, 483, 153},
                    {246, 745, 472, 237, 528, 364, 332, 349, 202, 685, 542, 157, 289, 426, 483, 0, 336},
                    {121, 518, 142, 84, 297, 35, 29, 36, 236, 390, 238, 301, 55, 96, 153, 336, 0},
            });
}
